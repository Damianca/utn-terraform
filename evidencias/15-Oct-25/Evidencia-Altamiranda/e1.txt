PS C:\Users\maltamiranda\Documents\Curso-AWS-Terraform\utn-terraform\practicas\a2-1510\e1> terraform apply                                          
Acquiring state lock. This may take a few moments...
data.aws_vpc.default: Reading...
data.aws_vpc.default: Read complete after 2s [id=vpc-0f82cd54f705e66ee]
data.aws_subnets.default: Reading...
data.aws_subnets.default: Read complete after 1s [id=us-east-1]

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_db_instance.PostgreSQL will be created
  + resource "aws_db_instance" "PostgreSQL" {
      + address                               = (known after apply)
      + allocated_storage                     = 10
      + apply_immediately                     = false
      + arn                                   = (known after apply)
      + auto_minor_version_upgrade            = true
      + availability_zone                     = (known after apply)
      + backup_retention_period               = (known after apply)
      + backup_target                         = (known after apply)
      + backup_window                         = (known after apply)
      + ca_cert_identifier                    = (known after apply)
      + character_set_name                    = (known after apply)
      + copy_tags_to_snapshot                 = false
      + database_insights_mode                = (known after apply)
      + db_name                               = "maxdb"
      + db_subnet_group_name                  = "db_group_subnets"
      + dedicated_log_volume                  = false
      + delete_automated_backups              = true
      + domain_fqdn                           = (known after apply)
      + endpoint                              = (known after apply)
      + engine                                = "postgres"
      + engine_lifecycle_support              = (known after apply)
      + engine_version                        = "16.4"
      + engine_version_actual                 = (known after apply)
      + hosted_zone_id                        = (known after apply)
      + id                                    = (known after apply)
      + identifier                            = "postgres-db-instance"
      + identifier_prefix                     = (known after apply)
      + instance_class                        = "db.t3.micro"
      + iops                                  = (known after apply)
      + kms_key_id                            = (known after apply)
      + latest_restorable_time                = (known after apply)
      + license_model                         = (known after apply)
      + listener_endpoint                     = (known after apply)
      + maintenance_window                    = (known after apply)
      + master_user_secret                    = (known after apply)
      + master_user_secret_kms_key_id         = (known after apply)
      + monitoring_interval                   = 0
      + monitoring_role_arn                   = (known after apply)
      + multi_az                              = false
      + nchar_character_set_name              = (known after apply)
      + network_type                          = (known after apply)
      + option_group_name                     = (known after apply)
      + parameter_group_name                  = (known after apply)
      + password                              = (sensitive value)
      + password_wo                           = (write-only attribute)
      + performance_insights_enabled          = false
      + performance_insights_kms_key_id       = (known after apply)
      + performance_insights_retention_period = (known after apply)
      + port                                  = (known after apply)
      + publicly_accessible                   = true
      + replica_mode                          = (known after apply)
      + replicas                              = (known after apply)
      + resource_id                           = (known after apply)
      + skip_final_snapshot                   = true
      + snapshot_identifier                   = (known after apply)
      + status                                = (known after apply)
      + storage_throughput                    = (known after apply)
      + storage_type                          = (known after apply)
      + tags_all                              = {
          + "cloud"   = "AWS"
          + "env"     = "Sandbox"
          + "owner"   = "MaxAltamiranda"
          + "project" = "Curso-UTN"
          + "region"  = "Virginia"
        }
      + timezone                              = (known after apply)
      + username                              = "maltamiranda"
      + vpc_security_group_ids                = (known after apply)
    }

  # aws_db_subnet_group.default_subnets will be created
  + resource "aws_db_subnet_group" "default_subnets" {
      + arn                     = (known after apply)
      + description             = "Managed by Terraform"
      + id                      = (known after apply)
      + name                    = "db_group_subnets"
      + name_prefix             = (known after apply)
      + subnet_ids              = [
          + "subnet-01dffbc60d9951748",
          + "subnet-04abea6db58cd4ff8",
          + "subnet-04debad39df922a56",
          + "subnet-04f746c9f174c9f39",
          + "subnet-099e698fd24fba763",
          + "subnet-0b62e1e6c6e98a07b",
        ]
      + supported_network_types = (known after apply)
      + tags                    = {
          + "Name" = "group subnets defaut vpc"
        }
      + tags_all                = {
          + "Name"    = "group subnets defaut vpc"
          + "cloud"   = "AWS"
          + "env"     = "Sandbox"
          + "owner"   = "MaxAltamiranda"
          + "project" = "Curso-UTN"
          + "region"  = "Virginia"
        }
      + vpc_id                  = (known after apply)
    }

  # aws_security_group.sg_postgre will be created
  + resource "aws_security_group" "sg_postgre" {
      + arn                    = (known after apply)
      + description            = "Allow postgress connection"
      + egress                 = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + from_port        = 0
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "-1"
              + security_groups  = []
              + self             = false
              + to_port          = 0
                # (1 unchanged attribute hidden)
            },
        ]
      + id                     = (known after apply)
      + ingress                = [
          + {
              + cidr_blocks      = [
                  + "181.168.142.93/32",
                ]
              + description      = "Allow 5432"
              + from_port        = 5432
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "tcp"
              + security_groups  = []
              + self             = false
              + to_port          = 5432
            },
        ]
      + name                   = "allow postgre"
      + name_prefix            = (known after apply)
      + owner_id               = (known after apply)
      + revoke_rules_on_delete = false
      + tags_all               = {
          + "cloud"   = "AWS"
          + "env"     = "Sandbox"
          + "owner"   = "MaxAltamiranda"
          + "project" = "Curso-UTN"
          + "region"  = "Virginia"
        }
      + vpc_id                 = "vpc-0f82cd54f705e66ee"
    }

Plan: 3 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + db_name  = [
      + "maxdb",
    ]
  + endpoint = [
      + (known after apply),
    ]

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes

aws_db_subnet_group.default_subnets: Creating...
aws_security_group.sg_postgre: Creating...
aws_db_subnet_group.default_subnets: Creation complete after 2s [id=db_group_subnets]
aws_security_group.sg_postgre: Creation complete after 5s [id=sg-0a9eedee99c9f6a58]
aws_db_instance.PostgreSQL: Creating...
aws_db_instance.PostgreSQL: Still creating... [00m10s elapsed]
aws_db_instance.PostgreSQL: Still creating... [00m20s elapsed]
aws_db_instance.PostgreSQL: Still creating... [00m30s elapsed]
aws_db_instance.PostgreSQL: Still creating... [00m40s elapsed]
aws_db_instance.PostgreSQL: Still creating... [00m50s elapsed]
aws_db_instance.PostgreSQL: Still creating... [01m00s elapsed]
aws_db_instance.PostgreSQL: Still creating... [01m10s elapsed]
aws_db_instance.PostgreSQL: Still creating... [01m20s elapsed]
aws_db_instance.PostgreSQL: Still creating... [01m30s elapsed]
aws_db_instance.PostgreSQL: Still creating... [01m40s elapsed]
aws_db_instance.PostgreSQL: Still creating... [01m50s elapsed]
aws_db_instance.PostgreSQL: Still creating... [02m00s elapsed]
aws_db_instance.PostgreSQL: Still creating... [02m10s elapsed]
aws_db_instance.PostgreSQL: Still creating... [02m20s elapsed]
aws_db_instance.PostgreSQL: Still creating... [02m30s elapsed]
aws_db_instance.PostgreSQL: Still creating... [02m40s elapsed]
aws_db_instance.PostgreSQL: Still creating... [02m50s elapsed]
aws_db_instance.PostgreSQL: Still creating... [03m00s elapsed]
aws_db_instance.PostgreSQL: Still creating... [03m10s elapsed]
aws_db_instance.PostgreSQL: Still creating... [03m20s elapsed]
aws_db_instance.PostgreSQL: Still creating... [03m30s elapsed]
aws_db_instance.PostgreSQL: Still creating... [03m40s elapsed]
aws_db_instance.PostgreSQL: Still creating... [03m50s elapsed]
aws_db_instance.PostgreSQL: Still creating... [04m00s elapsed]
aws_db_instance.PostgreSQL: Still creating... [04m10s elapsed]
aws_db_instance.PostgreSQL: Still creating... [04m20s elapsed]
aws_db_instance.PostgreSQL: Still creating... [04m30s elapsed]
aws_db_instance.PostgreSQL: Still creating... [04m40s elapsed]
aws_db_instance.PostgreSQL: Still creating... [04m50s elapsed]
aws_db_instance.PostgreSQL: Still creating... [05m00s elapsed]
aws_db_instance.PostgreSQL: Still creating... [05m10s elapsed]
aws_db_instance.PostgreSQL: Still creating... [05m20s elapsed]
aws_db_instance.PostgreSQL: Creation complete after 5m21s [id=db-DOHI3Q4IWV5HDXUQ74E5AFDSEI]
Releasing state lock. This may take a few moments...

Apply complete! Resources: 3 added, 0 changed, 0 destroyed.

Outputs:

aws_db_instance.PostgreSQL: Still creating... [04m40s elapsed]
aws_db_instance.PostgreSQL: Still creating... [04m50s elapsed]
aws_db_instance.PostgreSQL: Still creating... [05m00s elapsed]
aws_db_instance.PostgreSQL: Still creating... [05m10s elapsed]
aws_db_instance.PostgreSQL: Still creating... [05m20s elapsed]
aws_db_instance.PostgreSQL: Creation complete after 5m21s [id=db-DOHI3Q4IWV5HDXUQ74E5AFDSEI]
Releasing state lock. This may take a few moments...

Apply complete! Resources: 3 added, 0 changed, 0 destroyed.

Outputs:

aws_db_instance.PostgreSQL: Still creating... [05m00s elapsed]
aws_db_instance.PostgreSQL: Still creating... [05m10s elapsed]
aws_db_instance.PostgreSQL: Still creating... [05m20s elapsed]
aws_db_instance.PostgreSQL: Creation complete after 5m21s [id=db-DOHI3Q4IWV5HDXUQ74E5AFDSEI]
Releasing state lock. This may take a few moments...

Apply complete! Resources: 3 added, 0 changed, 0 destroyed.

Outputs:

aws_db_instance.PostgreSQL: Still creating... [05m10s elapsed]
aws_db_instance.PostgreSQL: Still creating... [05m20s elapsed]
aws_db_instance.PostgreSQL: Creation complete after 5m21s [id=db-DOHI3Q4IWV5HDXUQ74E5AFDSEI]
Releasing state lock. This may take a few moments...

Apply complete! Resources: 3 added, 0 changed, 0 destroyed.

Outputs:

aws_db_instance.PostgreSQL: Creation complete after 5m21s [id=db-DOHI3Q4IWV5HDXUQ74E5AFDSEI]
Releasing state lock. This may take a few moments...

Apply complete! Resources: 3 added, 0 changed, 0 destroyed.

Outputs:


Apply complete! Resources: 3 added, 0 changed, 0 destroyed.

Outputs:

Apply complete! Resources: 3 added, 0 changed, 0 destroyed.

Outputs:


Outputs:

Outputs:

db_name = [
  "maxdb",
]
endpoint = [
  "postgres-db-instance.cq52ci6gqyiw.us-east-1.rds.amazonaws.com:5432",
]
PS C:\Users\maltamiranda\Documents\Curso-AWS-Terraform\utn-terraform\practicas\a2-1510\e1> psql -h postgres-db-instance.cq52ci6gqyiw.us-east-1.rds.amazonaws.com -p 5432 -U maltamiranda -d maxdb
Password for user maltamiranda:

psql (16.2, server 16.4)
WARNING: Console code page (65001) differs from Windows code page (1252)
         8-bit characters might not work correctly. See psql reference
         page "Notes for Windows users" for details.
SSL connection (protocol: TLSv1.3, cipher: TLS_AES_256_GCM_SHA384, compression: off)
Type "help" for help.

maxdb=> \dt
Did not find any relations.
maxdb=> \q
PS C:\Users\maltamiranda\Documents\Curso-AWS-Terraform\utn-terraform\practicas\a2-1510\e1> terraform destroy
Acquiring state lock. This may take a few moments...
data.aws_vpc.default: Reading...
data.aws_vpc.default: Read complete after 2s [id=vpc-0f82cd54f705e66ee]
data.aws_subnets.default: Reading...
aws_security_group.sg_postgre: Refreshing state... [id=sg-0a9eedee99c9f6a58]
data.aws_subnets.default: Read complete after 0s [id=us-east-1]
aws_db_subnet_group.default_subnets: Refreshing state... [id=db_group_subnets]
aws_db_instance.PostgreSQL: Refreshing state... [id=db-DOHI3Q4IWV5HDXUQ74E5AFDSEI]

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  - destroy

Terraform will perform the following actions:

  # aws_db_instance.PostgreSQL will be destroyed
  - resource "aws_db_instance" "PostgreSQL" {
      - address                               = "postgres-db-instance.cq52ci6gqyiw.us-east-1.rds.amazonaws.com" -> null
      - allocated_storage                     = 10 -> null
      - apply_immediately                     = false -> null
      - arn                                   = "arn:aws:rds:us-east-1:251964342273:db:postgres-db-instance" -> null
      - auto_minor_version_upgrade            = true -> null
      - availability_zone                     = "us-east-1f" -> null
      - backup_retention_period               = 0 -> null
      - backup_target                         = "region" -> null
      - backup_window                         = "04:13-04:43" -> null
      - ca_cert_identifier                    = "rds-ca-rsa2048-g1" -> null
      - copy_tags_to_snapshot                 = false -> null
      - customer_owned_ip_enabled             = false -> null
      - database_insights_mode                = "standard" -> null
      - db_name                               = "maxdb" -> null
      - db_subnet_group_name                  = "db_group_subnets" -> null
      - dedicated_log_volume                  = false -> null
      - delete_automated_backups              = true -> null
      - deletion_protection                   = false -> null
      - domain_dns_ips                        = [] -> null
      - enabled_cloudwatch_logs_exports       = [] -> null
      - endpoint                              = "postgres-db-instance.cq52ci6gqyiw.us-east-1.rds.amazonaws.com:5432" -> null
      - engine                                = "postgres" -> null
      - engine_lifecycle_support              = "open-source-rds-extended-support" -> null
      - engine_version                        = "16.4" -> null
      - engine_version_actual                 = "16.4" -> null
      - hosted_zone_id                        = "Z2R2ITUGPM61AM" -> null
      - iam_database_authentication_enabled   = false -> null
      - id                                    = "db-DOHI3Q4IWV5HDXUQ74E5AFDSEI" -> null
      - identifier                            = "postgres-db-instance" -> null
      - instance_class                        = "db.t3.micro" -> null
      - iops                                  = 0 -> null
      - license_model                         = "postgresql-license" -> null
      - listener_endpoint                     = [] -> null
      - maintenance_window                    = "mon:08:57-mon:09:27" -> null
      - master_user_secret                    = [] -> null
      - max_allocated_storage                 = 0 -> null
      - monitoring_interval                   = 0 -> null
      - multi_az                              = false -> null
      - network_type                          = "IPV4" -> null
      - option_group_name                     = "default:postgres-16" -> null
      - parameter_group_name                  = "default.postgres16" -> null
      - password                              = (sensitive value) -> null
      - password_wo                           = (write-only attribute) -> null
      - performance_insights_enabled          = false -> null
      - performance_insights_retention_period = 0 -> null
      - port                                  = 5432 -> null
      - publicly_accessible                   = true -> null
      - replicas                              = [] -> null
      - resource_id                           = "db-DOHI3Q4IWV5HDXUQ74E5AFDSEI" -> null
      - skip_final_snapshot                   = true -> null
      - status                                = "available" -> null
      - storage_encrypted                     = false -> null
      - storage_throughput                    = 0 -> null
      - storage_type                          = "gp2" -> null
      - tags                                  = {} -> null
      - tags_all                              = {
          - "cloud"   = "AWS"
          - "env"     = "Sandbox"
          - "owner"   = "MaxAltamiranda"
          - "project" = "Curso-UTN"
          - "region"  = "Virginia"
        } -> null
      - username                              = "maltamiranda" -> null
      - vpc_security_group_ids                = [
          - "sg-0a9eedee99c9f6a58",
        ] -> null
        # (16 unchanged attributes hidden)
    }

  # aws_db_subnet_group.default_subnets will be destroyed
  - resource "aws_db_subnet_group" "default_subnets" {
      - arn                     = "arn:aws:rds:us-east-1:251964342273:subgrp:db_group_subnets" -> null
      - description             = "Managed by Terraform" -> null
      - id                      = "db_group_subnets" -> null
      - name                    = "db_group_subnets" -> null
      - subnet_ids              = [
          - "subnet-01dffbc60d9951748",
          - "subnet-04abea6db58cd4ff8",
          - "subnet-04debad39df922a56",
          - "subnet-04f746c9f174c9f39",
          - "subnet-099e698fd24fba763",
          - "subnet-0b62e1e6c6e98a07b",
        ] -> null
      - supported_network_types = [
          - "IPV4",
        ] -> null
      - tags                    = {
          - "Name" = "group subnets defaut vpc"
        } -> null
      - tags_all                = {
          - "Name"    = "group subnets defaut vpc"
          - "cloud"   = "AWS"
          - "env"     = "Sandbox"
          - "owner"   = "MaxAltamiranda"
          - "project" = "Curso-UTN"
          - "region"  = "Virginia"
        } -> null
      - vpc_id                  = "vpc-0f82cd54f705e66ee" -> null
        # (1 unchanged attribute hidden)
    }

  # aws_security_group.sg_postgre will be destroyed
  - resource "aws_security_group" "sg_postgre" {
      - arn                    = "arn:aws:ec2:us-east-1:251964342273:security-group/sg-0a9eedee99c9f6a58" -> null
      - description            = "Allow postgress connection" -> null
      - egress                 = [
          - {
              - cidr_blocks      = [
                  - "0.0.0.0/0",
                ]
              - from_port        = 0
              - ipv6_cidr_blocks = []
              - prefix_list_ids  = []
              - protocol         = "-1"
              - security_groups  = []
              - self             = false
              - to_port          = 0
                # (1 unchanged attribute hidden)
            },
        ] -> null
      - id                     = "sg-0a9eedee99c9f6a58" -> null
      - ingress                = [
          - {
              - cidr_blocks      = [
                  - "181.168.142.93/32",
                ]
              - description      = "Allow 5432"
              - from_port        = 5432
              - ipv6_cidr_blocks = []
              - prefix_list_ids  = []
              - protocol         = "tcp"
              - security_groups  = []
              - self             = false
              - to_port          = 5432
            },
        ] -> null
      - name                   = "allow postgre" -> null
      - owner_id               = "251964342273" -> null
      - revoke_rules_on_delete = false -> null
      - tags                   = {} -> null
      - tags_all               = {
          - "cloud"   = "AWS"
          - "env"     = "Sandbox"
          - "owner"   = "MaxAltamiranda"
          - "project" = "Curso-UTN"
          - "region"  = "Virginia"
        } -> null
      - vpc_id                 = "vpc-0f82cd54f705e66ee" -> null
        # (1 unchanged attribute hidden)
    }

Plan: 0 to add, 0 to change, 3 to destroy.

Changes to Outputs:
  - db_name  = [
      - "maxdb",
    ] -> null
  - endpoint = [
      - "postgres-db-instance.cq52ci6gqyiw.us-east-1.rds.amazonaws.com:5432",
    ] -> null

Do you really want to destroy all resources?
  Terraform will destroy all your managed infrastructure, as shown above.
  There is no undo. Only 'yes' will be accepted to confirm.

  Enter a value: yes

aws_db_instance.PostgreSQL: Destroying... [id=db-DOHI3Q4IWV5HDXUQ74E5AFDSEI]
aws_db_instance.PostgreSQL: Still destroying... [id=db-DOHI3Q4IWV5HDXUQ74E5AFDSEI, 00m10s elapsed]
aws_db_instance.PostgreSQL: Still destroying... [id=db-DOHI3Q4IWV5HDXUQ74E5AFDSEI, 00m20s elapsed]
aws_db_instance.PostgreSQL: Still destroying... [id=db-DOHI3Q4IWV5HDXUQ74E5AFDSEI, 00m30s elapsed]
aws_db_instance.PostgreSQL: Still destroying... [id=db-DOHI3Q4IWV5HDXUQ74E5AFDSEI, 00m40s elapsed]
aws_db_instance.PostgreSQL: Still destroying... [id=db-DOHI3Q4IWV5HDXUQ74E5AFDSEI, 00m50s elapsed]
aws_db_instance.PostgreSQL: Still destroying... [id=db-DOHI3Q4IWV5HDXUQ74E5AFDSEI, 01m00s elapsed]
aws_db_instance.PostgreSQL: Still destroying... [id=db-DOHI3Q4IWV5HDXUQ74E5AFDSEI, 01m10s elapsed]
aws_db_instance.PostgreSQL: Still destroying... [id=db-DOHI3Q4IWV5HDXUQ74E5AFDSEI, 01m20s elapsed]
aws_db_instance.PostgreSQL: Still destroying... [id=db-DOHI3Q4IWV5HDXUQ74E5AFDSEI, 01m30s elapsed]
aws_db_instance.PostgreSQL: Still destroying... [id=db-DOHI3Q4IWV5HDXUQ74E5AFDSEI, 01m40s elapsed]
aws_db_instance.PostgreSQL: Still destroying... [id=db-DOHI3Q4IWV5HDXUQ74E5AFDSEI, 01m50s elapsed]
aws_db_instance.PostgreSQL: Still destroying... [id=db-DOHI3Q4IWV5HDXUQ74E5AFDSEI, 02m00s elapsed]
aws_db_instance.PostgreSQL: Still destroying... [id=db-DOHI3Q4IWV5HDXUQ74E5AFDSEI, 02m10s elapsed]
aws_db_instance.PostgreSQL: Still destroying... [id=db-DOHI3Q4IWV5HDXUQ74E5AFDSEI, 02m20s elapsed]
aws_db_instance.PostgreSQL: Still destroying... [id=db-DOHI3Q4IWV5HDXUQ74E5AFDSEI, 02m30s elapsed]
aws_db_instance.PostgreSQL: Still destroying... [id=db-DOHI3Q4IWV5HDXUQ74E5AFDSEI, 02m40s elapsed]
aws_db_instance.PostgreSQL: Still destroying... [id=db-DOHI3Q4IWV5HDXUQ74E5AFDSEI, 02m50s elapsed]
aws_db_instance.PostgreSQL: Still destroying... [id=db-DOHI3Q4IWV5HDXUQ74E5AFDSEI, 03m00s elapsed]
aws_db_instance.PostgreSQL: Still destroying... [id=db-DOHI3Q4IWV5HDXUQ74E5AFDSEI, 03m10s elapsed]
aws_db_instance.PostgreSQL: Still destroying... [id=db-DOHI3Q4IWV5HDXUQ74E5AFDSEI, 03m20s elapsed]
aws_db_instance.PostgreSQL: Still destroying... [id=db-DOHI3Q4IWV5HDXUQ74E5AFDSEI, 03m30s elapsed]
aws_db_instance.PostgreSQL: Still destroying... [id=db-DOHI3Q4IWV5HDXUQ74E5AFDSEI, 03m40s elapsed]
aws_db_instance.PostgreSQL: Still destroying... [id=db-DOHI3Q4IWV5HDXUQ74E5AFDSEI, 03m50s elapsed]
aws_db_instance.PostgreSQL: Still destroying... [id=db-DOHI3Q4IWV5HDXUQ74E5AFDSEI, 04m00s elapsed]
aws_db_instance.PostgreSQL: Destruction complete after 4m8s
aws_db_subnet_group.default_subnets: Destroying... [id=db_group_subnets]
aws_security_group.sg_postgre: Destroying... [id=sg-0a9eedee99c9f6a58]
aws_db_subnet_group.default_subnets: Destruction complete after 0s
aws_security_group.sg_postgre: Destruction complete after 2s
Releasing state lock. This may take a few moments...

Destroy complete! Resources: 3 destroyed.
PS C:\Users\maltamiranda\Documents\Curso-AWS-Terraform\utn-terraform\practicas\a2-1510\e1>