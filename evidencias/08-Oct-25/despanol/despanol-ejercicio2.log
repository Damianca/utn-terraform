terraform apply
Acquiring state lock. This may take a few moments...
data.aws_ami.al2023: Reading...
data.aws_ami.al2023: Read complete after 1s [id=ami-014b824b957230c1f]

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_instance.mysql_host will be created
  + resource "aws_instance" "mysql_host" {
      + ami                                  = "ami-014b824b957230c1f"
      + arn                                  = (known after apply)
      + associate_public_ip_address          = true
      + availability_zone                    = (known after apply)
      + cpu_core_count                       = (known after apply)
      + cpu_threads_per_core                 = (known after apply)
      + disable_api_stop                     = (known after apply)
      + disable_api_termination              = (known after apply)
      + ebs_optimized                        = (known after apply)
      + enable_primary_ipv6                  = (known after apply)
      + get_password_data                    = false
      + host_id                              = (known after apply)
      + host_resource_group_arn              = (known after apply)
      + iam_instance_profile                 = (known after apply)
      + id                                   = (known after apply)
      + instance_initiated_shutdown_behavior = (known after apply)
      + instance_lifecycle                   = (known after apply)
      + instance_state                       = (known after apply)
      + instance_type                        = "t2.micro"
      + ipv6_address_count                   = (known after apply)
      + ipv6_addresses                       = (known after apply)
      + key_name                             = (known after apply)
      + monitoring                           = (known after apply)
      + outpost_arn                          = (known after apply)
      + password_data                        = (known after apply)
      + placement_group                      = (known after apply)
      + placement_partition_number           = (known after apply)
      + primary_network_interface_id         = (known after apply)
      + private_dns                          = (known after apply)
      + private_ip                           = (known after apply)
      + public_dns                           = (known after apply)
      + public_ip                            = (known after apply)
      + secondary_private_ips                = (known after apply)
      + security_groups                      = (known after apply)
      + source_dest_check                    = true
      + spot_instance_request_id             = (known after apply)
      + subnet_id                            = (known after apply)
      + tags                                 = {
          + "Name" = "mysql-host-demian"
        }
      + tags_all                             = {
          + "Name" = "mysql-host-demian"
        }
      + tenancy                              = (known after apply)
      + user_data                            = (known after apply)
      + user_data_base64                     = (known after apply)
      + user_data_replace_on_change          = false
      + vpc_security_group_ids               = (known after apply)

      + capacity_reservation_specification (known after apply)

      + cpu_options (known after apply)

      + ebs_block_device (known after apply)

      + enclave_options (known after apply)

      + ephemeral_block_device (known after apply)

      + instance_market_options (known after apply)

      + maintenance_options (known after apply)

      + metadata_options (known after apply)

      + network_interface (known after apply)

      + private_dns_name_options (known after apply)

      + root_block_device (known after apply)
    }

  # aws_internet_gateway.igw will be created
  + resource "aws_internet_gateway" "igw" {
      + arn      = (known after apply)
      + id       = (known after apply)
      + owner_id = (known after apply)
      + tags     = {
          + "Name" = "igw-demian"
        }
      + tags_all = {
          + "Name" = "igw-demian"
        }
      + vpc_id   = (known after apply)
    }

  # aws_route_table.public will be created
  + resource "aws_route_table" "public" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = [
          + {
              + cidr_block                 = "0.0.0.0/0"
              + gateway_id                 = (known after apply)
                # (11 unchanged attributes hidden)
            },
        ]
      + tags             = {
          + "Name" = "rtb-public-demian"
        }
      + tags_all         = {
          + "Name" = "rtb-public-demian"
        }
      + vpc_id           = (known after apply)
    }

  # aws_route_table_association.public_a will be created
  + resource "aws_route_table_association" "public_a" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # aws_security_group.mysql will be created
  + resource "aws_security_group" "mysql" {
      + arn                    = (known after apply)
      + description            = "Permite acceso a MySQL (3306/TCP)"
      + egress                 = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + from_port        = 0
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "-1"
              + security_groups  = []
              + self             = false
              + to_port          = 0
                # (1 unchanged attribute hidden)
            },
        ]
      + id                     = (known after apply)
      + ingress                = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + description      = "MySQL"
              + from_port        = 3306
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "tcp"
              + security_groups  = []
              + self             = false
              + to_port          = 3306
            },
        ]
      + name                   = "mysql-demian"
      + name_prefix            = (known after apply)
      + owner_id               = (known after apply)
      + revoke_rules_on_delete = false
      + tags                   = {
          + "Name" = "sg-mysql-demian"
        }
      + tags_all               = {
          + "Name" = "sg-mysql-demian"
        }
      + vpc_id                 = (known after apply)
    }

  # aws_security_group.ping will be created
  + resource "aws_security_group" "ping" {
      + arn                    = (known after apply)
      + description            = "Permite SOLO ping (ICMP echo-request)"
      + egress                 = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + from_port        = 0
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "-1"
              + security_groups  = []
              + self             = false
              + to_port          = 0
                # (1 unchanged attribute hidden)
            },
        ]
      + id                     = (known after apply)
      + ingress                = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + from_port        = 8
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "icmp"
              + security_groups  = []
              + self             = false
              + to_port          = -1
                # (1 unchanged attribute hidden)
            },
        ]
      + name                   = "ping-demian"
      + name_prefix            = (known after apply)
      + owner_id               = (known after apply)
      + revoke_rules_on_delete = false
      + tags                   = {
          + "Name" = "sg-ping-demian"
        }
      + tags_all               = {
          + "Name" = "sg-ping-demian"
        }
      + vpc_id                 = (known after apply)
    }

  # aws_subnet.public_a will be created
  + resource "aws_subnet" "public_a" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1a"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.1.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = true
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name" = "subnet-public-a-demian"
        }
      + tags_all                                       = {
          + "Name" = "subnet-public-a-demian"
        }
      + vpc_id                                         = (known after apply)
    }

  # aws_vpc.main will be created
  + resource "aws_vpc" "main" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.0.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_dns_hostnames                 = true
      + enable_dns_support                   = true
      + enable_network_address_usage_metrics = (known after apply)
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags                                 = {
          + "Name" = "vpc-demian"
        }
      + tags_all                             = {
          + "Name" = "vpc-demian"
        }
    }

Plan: 8 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + instance_public_ip = (known after apply)
  + sg_mysql           = {
      + id   = (known after apply)
      + name = "mysql-demian"
      + tag  = "sg-mysql-demian"
    }
  + sg_ping            = {
      + id   = (known after apply)
      + name = "ping-demian"
      + tag  = "sg-ping-demian"
    }
  + subnet_public_a_id = (known after apply)
  + vpc_id             = (known after apply)

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes

aws_vpc.main: Creating...
aws_vpc.main: Still creating... [00m10s elapsed]
aws_vpc.main: Creation complete after 13s [id=vpc-02a6061267e60c5b4]
aws_internet_gateway.igw: Creating...
aws_subnet.public_a: Creating...
aws_security_group.ping: Creating...
aws_security_group.mysql: Creating...
aws_internet_gateway.igw: Creation complete after 1s [id=igw-07e306a490bf78c3f]
aws_route_table.public: Creating...
aws_route_table.public: Creation complete after 2s [id=rtb-0077d40d32b5e864e]
aws_security_group.mysql: Creation complete after 5s [id=sg-09d652162180df151]
aws_security_group.ping: Creation complete after 5s [id=sg-05e534cc8e495defa]
aws_subnet.public_a: Still creating... [00m10s elapsed]
aws_subnet.public_a: Creation complete after 12s [id=subnet-09c36903cdcbc7f41]
aws_route_table_association.public_a: Creating...
aws_instance.mysql_host: Creating...
aws_route_table_association.public_a: Creation complete after 1s [id=rtbassoc-09c2b1a6406bcbab4]
aws_instance.mysql_host: Still creating... [00m10s elapsed]
aws_instance.mysql_host: Creation complete after 15s [id=i-00cb6f4feb4680ad6]
Releasing state lock. This may take a few moments...

Apply complete! Resources: 8 added, 0 changed, 0 destroyed.

Outputs:

instance_public_ip = "52.55.58.41"
sg_mysql = {
  "id" = "sg-09d652162180df151"
  "name" = "mysql-demian"
  "tag" = "sg-mysql-demian"
}
sg_ping = {
  "id" = "sg-05e534cc8e495defa"
  "name" = "ping-demian"
  "tag" = "sg-ping-demian"
}
subnet_public_a_id = "subnet-09c36903cdcbc7f41"
vpc_id = "vpc-02a6061267e60c5b4"
demian@AR01ENOT0579:~/tmp/aws-terraform-curso/ejercicios-creados/e2$ terraform destroy
Acquiring state lock. This may take a few moments...
data.aws_ami.al2023: Reading...
aws_vpc.main: Refreshing state... [id=vpc-02a6061267e60c5b4]
data.aws_ami.al2023: Read complete after 1s [id=ami-014b824b957230c1f]
aws_internet_gateway.igw: Refreshing state... [id=igw-07e306a490bf78c3f]
aws_subnet.public_a: Refreshing state... [id=subnet-09c36903cdcbc7f41]
aws_security_group.mysql: Refreshing state... [id=sg-09d652162180df151]
aws_security_group.ping: Refreshing state... [id=sg-05e534cc8e495defa]
aws_route_table.public: Refreshing state... [id=rtb-0077d40d32b5e864e]
aws_instance.mysql_host: Refreshing state... [id=i-00cb6f4feb4680ad6]
aws_route_table_association.public_a: Refreshing state... [id=rtbassoc-09c2b1a6406bcbab4]

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  - destroy

Terraform will perform the following actions:

  # aws_instance.mysql_host will be destroyed
  - resource "aws_instance" "mysql_host" {
      - ami                                  = "ami-014b824b957230c1f" -> null
      - arn                                  = "arn:aws:ec2:us-east-1:251964342273:instance/i-00cb6f4feb4680ad6" -> null
      - associate_public_ip_address          = true -> null
      - availability_zone                    = "us-east-1a" -> null
      - cpu_core_count                       = 1 -> null
      - cpu_threads_per_core                 = 1 -> null
      - disable_api_stop                     = false -> null
      - disable_api_termination              = false -> null
      - ebs_optimized                        = false -> null
      - get_password_data                    = false -> null
      - hibernation                          = false -> null
      - id                                   = "i-00cb6f4feb4680ad6" -> null
      - instance_initiated_shutdown_behavior = "stop" -> null
      - instance_state                       = "running" -> null
      - instance_type                        = "t2.micro" -> null
      - ipv6_address_count                   = 0 -> null
      - ipv6_addresses                       = [] -> null
      - monitoring                           = false -> null
      - placement_partition_number           = 0 -> null
      - primary_network_interface_id         = "eni-03e33f7558e1a92cd" -> null
      - private_dns                          = "ip-10-0-1-75.ec2.internal" -> null
      - private_ip                           = "10.0.1.75" -> null
      - public_dns                           = "ec2-52-55-58-41.compute-1.amazonaws.com" -> null
      - public_ip                            = "52.55.58.41" -> null
      - secondary_private_ips                = [] -> null
      - security_groups                      = [] -> null
      - source_dest_check                    = true -> null
      - subnet_id                            = "subnet-09c36903cdcbc7f41" -> null
      - tags                                 = {
          - "Name" = "mysql-host-demian"
        } -> null
      - tags_all                             = {
          - "Name" = "mysql-host-demian"
        } -> null
      - tenancy                              = "default" -> null
      - user_data_replace_on_change          = false -> null
      - vpc_security_group_ids               = [
          - "sg-09d652162180df151",
        ] -> null
        # (8 unchanged attributes hidden)

      - capacity_reservation_specification {
          - capacity_reservation_preference = "open" -> null
        }

      - cpu_options {
          - core_count       = 1 -> null
          - threads_per_core = 1 -> null
            # (1 unchanged attribute hidden)
        }

      - credit_specification {
          - cpu_credits = "standard" -> null
        }

      - enclave_options {
          - enabled = false -> null
        }

      - maintenance_options {
          - auto_recovery = "default" -> null
        }

      - metadata_options {
          - http_endpoint               = "enabled" -> null
          - http_protocol_ipv6          = "disabled" -> null
          - http_put_response_hop_limit = 2 -> null
          - http_tokens                 = "required" -> null
          - instance_metadata_tags      = "disabled" -> null
        }

      - private_dns_name_options {
          - enable_resource_name_dns_a_record    = false -> null
          - enable_resource_name_dns_aaaa_record = false -> null
          - hostname_type                        = "ip-name" -> null
        }

      - root_block_device {
          - delete_on_termination = true -> null
          - device_name           = "/dev/xvda" -> null
          - encrypted             = false -> null
          - iops                  = 3000 -> null
          - tags                  = {} -> null
          - tags_all              = {} -> null
          - throughput            = 125 -> null
          - volume_id             = "vol-0ade8e44711cbc37c" -> null
          - volume_size           = 2 -> null
          - volume_type           = "gp3" -> null
            # (1 unchanged attribute hidden)
        }
    }

  # aws_internet_gateway.igw will be destroyed
  - resource "aws_internet_gateway" "igw" {
      - arn      = "arn:aws:ec2:us-east-1:251964342273:internet-gateway/igw-07e306a490bf78c3f" -> null
      - id       = "igw-07e306a490bf78c3f" -> null
      - owner_id = "251964342273" -> null
      - tags     = {
          - "Name" = "igw-demian"
        } -> null
      - tags_all = {
          - "Name" = "igw-demian"
        } -> null
      - vpc_id   = "vpc-02a6061267e60c5b4" -> null
    }

  # aws_route_table.public will be destroyed
  - resource "aws_route_table" "public" {
      - arn              = "arn:aws:ec2:us-east-1:251964342273:route-table/rtb-0077d40d32b5e864e" -> null
      - id               = "rtb-0077d40d32b5e864e" -> null
      - owner_id         = "251964342273" -> null
      - propagating_vgws = [] -> null
      - route            = [
          - {
              - cidr_block                 = "0.0.0.0/0"
              - gateway_id                 = "igw-07e306a490bf78c3f"
                # (11 unchanged attributes hidden)
            },
        ] -> null
      - tags             = {
          - "Name" = "rtb-public-demian"
        } -> null
      - tags_all         = {
          - "Name" = "rtb-public-demian"
        } -> null
      - vpc_id           = "vpc-02a6061267e60c5b4" -> null
    }

  # aws_route_table_association.public_a will be destroyed
  - resource "aws_route_table_association" "public_a" {
      - id             = "rtbassoc-09c2b1a6406bcbab4" -> null
      - route_table_id = "rtb-0077d40d32b5e864e" -> null
      - subnet_id      = "subnet-09c36903cdcbc7f41" -> null
        # (1 unchanged attribute hidden)
    }

  # aws_security_group.mysql will be destroyed
  - resource "aws_security_group" "mysql" {
      - arn                    = "arn:aws:ec2:us-east-1:251964342273:security-group/sg-09d652162180df151" -> null
      - description            = "Permite acceso a MySQL (3306/TCP)" -> null
      - egress                 = [
          - {
              - cidr_blocks      = [
                  - "0.0.0.0/0",
                ]
              - from_port        = 0
              - ipv6_cidr_blocks = []
              - prefix_list_ids  = []
              - protocol         = "-1"
              - security_groups  = []
              - self             = false
              - to_port          = 0
                # (1 unchanged attribute hidden)
            },
        ] -> null
      - id                     = "sg-09d652162180df151" -> null
      - ingress                = [
          - {
              - cidr_blocks      = [
                  - "0.0.0.0/0",
                ]
              - description      = "MySQL"
              - from_port        = 3306
              - ipv6_cidr_blocks = []
              - prefix_list_ids  = []
              - protocol         = "tcp"
              - security_groups  = []
              - self             = false
              - to_port          = 3306
            },
        ] -> null
      - name                   = "mysql-demian" -> null
      - owner_id               = "251964342273" -> null
      - revoke_rules_on_delete = false -> null
      - tags                   = {
          - "Name" = "sg-mysql-demian"
        } -> null
      - tags_all               = {
          - "Name" = "sg-mysql-demian"
        } -> null
      - vpc_id                 = "vpc-02a6061267e60c5b4" -> null
        # (1 unchanged attribute hidden)
    }

  # aws_security_group.ping will be destroyed
  - resource "aws_security_group" "ping" {
      - arn                    = "arn:aws:ec2:us-east-1:251964342273:security-group/sg-05e534cc8e495defa" -> null
      - description            = "Permite SOLO ping (ICMP echo-request)" -> null
      - egress                 = [
          - {
              - cidr_blocks      = [
                  - "0.0.0.0/0",
                ]
              - from_port        = 0
              - ipv6_cidr_blocks = []
              - prefix_list_ids  = []
              - protocol         = "-1"
              - security_groups  = []
              - self             = false
              - to_port          = 0
                # (1 unchanged attribute hidden)
            },
        ] -> null
      - id                     = "sg-05e534cc8e495defa" -> null
      - ingress                = [
          - {
              - cidr_blocks      = [
                  - "0.0.0.0/0",
                ]
              - from_port        = 8
              - ipv6_cidr_blocks = []
              - prefix_list_ids  = []
              - protocol         = "icmp"
              - security_groups  = []
              - self             = false
              - to_port          = -1
                # (1 unchanged attribute hidden)
            },
        ] -> null
      - name                   = "ping-demian" -> null
      - owner_id               = "251964342273" -> null
      - revoke_rules_on_delete = false -> null
      - tags                   = {
          - "Name" = "sg-ping-demian"
        } -> null
      - tags_all               = {
          - "Name" = "sg-ping-demian"
        } -> null
      - vpc_id                 = "vpc-02a6061267e60c5b4" -> null
        # (1 unchanged attribute hidden)
    }

  # aws_subnet.public_a will be destroyed
  - resource "aws_subnet" "public_a" {
      - arn                                            = "arn:aws:ec2:us-east-1:251964342273:subnet/subnet-09c36903cdcbc7f41" -> null
      - assign_ipv6_address_on_creation                = false -> null
      - availability_zone                              = "us-east-1a" -> null
      - availability_zone_id                           = "use1-az6" -> null
      - cidr_block                                     = "10.0.1.0/24" -> null
      - enable_dns64                                   = false -> null
      - enable_lni_at_device_index                     = 0 -> null
      - enable_resource_name_dns_a_record_on_launch    = false -> null
      - enable_resource_name_dns_aaaa_record_on_launch = false -> null
      - id                                             = "subnet-09c36903cdcbc7f41" -> null
      - ipv6_native                                    = false -> null
      - map_customer_owned_ip_on_launch                = false -> null
      - map_public_ip_on_launch                        = true -> null
      - owner_id                                       = "251964342273" -> null
      - private_dns_hostname_type_on_launch            = "ip-name" -> null
      - tags                                           = {
          - "Name" = "subnet-public-a-demian"
        } -> null
      - tags_all                                       = {
          - "Name" = "subnet-public-a-demian"
        } -> null
      - vpc_id                                         = "vpc-02a6061267e60c5b4" -> null
        # (4 unchanged attributes hidden)
    }

  # aws_vpc.main will be destroyed
  - resource "aws_vpc" "main" {
      - arn                                  = "arn:aws:ec2:us-east-1:251964342273:vpc/vpc-02a6061267e60c5b4" -> null
      - assign_generated_ipv6_cidr_block     = false -> null
      - cidr_block                           = "10.0.0.0/16" -> null
      - default_network_acl_id               = "acl-081a5cf54b6af3bc7" -> null
      - default_route_table_id               = "rtb-0363eca7f81a091d7" -> null
      - default_security_group_id            = "sg-08e22ea5e2b7f2a6f" -> null
      - dhcp_options_id                      = "dopt-001234ca7f8ff6381" -> null
      - enable_dns_hostnames                 = true -> null
      - enable_dns_support                   = true -> null
      - enable_network_address_usage_metrics = false -> null
      - id                                   = "vpc-02a6061267e60c5b4" -> null
      - instance_tenancy                     = "default" -> null
      - ipv6_netmask_length                  = 0 -> null
      - main_route_table_id                  = "rtb-0363eca7f81a091d7" -> null
      - owner_id                             = "251964342273" -> null
      - tags                                 = {
          - "Name" = "vpc-demian"
        } -> null
      - tags_all                             = {
          - "Name" = "vpc-demian"
        } -> null
        # (4 unchanged attributes hidden)
    }

Plan: 0 to add, 0 to change, 8 to destroy.

Changes to Outputs:
  - instance_public_ip = "52.55.58.41" -> null
  - sg_mysql           = {
      - id   = "sg-09d652162180df151"
      - name = "mysql-demian"
      - tag  = "sg-mysql-demian"
    } -> null
  - sg_ping            = {
      - id   = "sg-05e534cc8e495defa"
      - name = "ping-demian"
      - tag  = "sg-ping-demian"
    } -> null
  - subnet_public_a_id = "subnet-09c36903cdcbc7f41" -> null
  - vpc_id             = "vpc-02a6061267e60c5b4" -> null

Do you really want to destroy all resources?
  Terraform will destroy all your managed infrastructure, as shown above.
  There is no undo. Only 'yes' will be accepted to confirm.

  Enter a value: yes

aws_route_table_association.public_a: Destroying... [id=rtbassoc-09c2b1a6406bcbab4]
aws_security_group.ping: Destroying... [id=sg-05e534cc8e495defa]
aws_instance.mysql_host: Destroying... [id=i-00cb6f4feb4680ad6]
aws_route_table_association.public_a: Destruction complete after 1s
aws_route_table.public: Destroying... [id=rtb-0077d40d32b5e864e]
aws_security_group.ping: Destruction complete after 1s
aws_route_table.public: Destruction complete after 1s
aws_internet_gateway.igw: Destroying... [id=igw-07e306a490bf78c3f]
aws_instance.mysql_host: Still destroying... [id=i-00cb6f4feb4680ad6, 00m10s elapsed]
aws_internet_gateway.igw: Still destroying... [id=igw-07e306a490bf78c3f, 00m10s elapsed]
aws_instance.mysql_host: Still destroying... [id=i-00cb6f4feb4680ad6, 00m20s elapsed]
aws_internet_gateway.igw: Still destroying... [id=igw-07e306a490bf78c3f, 00m20s elapsed]
aws_instance.mysql_host: Still destroying... [id=i-00cb6f4feb4680ad6, 00m30s elapsed]
aws_internet_gateway.igw: Destruction complete after 30s
aws_instance.mysql_host: Still destroying... [id=i-00cb6f4feb4680ad6, 00m40s elapsed]
aws_instance.mysql_host: Destruction complete after 43s
aws_subnet.public_a: Destroying... [id=subnet-09c36903cdcbc7f41]
aws_security_group.mysql: Destroying... [id=sg-09d652162180df151]
aws_subnet.public_a: Destruction complete after 1s
aws_security_group.mysql: Destruction complete after 2s
aws_vpc.main: Destroying... [id=vpc-02a6061267e60c5b4]
aws_vpc.main: Destruction complete after 1s
Releasing state lock. This may take a few moments...

Destroy complete! Resources: 8 destroyed.